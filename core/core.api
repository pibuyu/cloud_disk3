syntax = "v1"

service core-api {
	@handler CoreHandler
	get /from/:name (Request) returns (Response)

	//用户登录
	@handler UserLogin
	post /user/login (LoginRequest) returns (LoginReply)

	//用户详情
	@handler UserDeatil
	//因为要传identity参数过去，所以要用post方法请求
	post /user/detail (UserDeatilRequest) returns (UserDeatilReply)

	//邮件发送
	@handler SendCodeRegister
	post /send/code/register (SendCodeRequest) returns (SendCodeReply)

	//用户注册
	@handler UserRegister
	post /user/register (UserRegisterRequest) returns (UserRegisterReply)
}

@server (
	middleware: Auth
)
service core-api {
	//文件上传
	@handler FileUpload
	post /file/upload (FileUploadRequest) returns (FileUploadReply)

	//用户文件关联存储
	@handler UserRepositorySave
	post /user/repository/save (UserRepositorySaveRequest) returns (UserRepositorySaveReply)

	//用户文件列表
	@handler UserFileList
	post /user/file/list (UserFileListRequest) returns (UserFileListReply)

	//用户文件名称修改
	@handler UserFileNameUpdate
	post /user/file/name/update (UserFileNameUpdateRequest) returns (UserFileNameUpdateReply)

	//用户文件夹创建
	@handler UserFolderCreate
	post /user/folder/create (UserFolderCreateRequest) returns (UserFolderCreateReply)

	//用户文件删除
	@handler UserFileDelete
	delete /user/file/delete (UserFileDeleteRequest) returns (UserFileDeleteReply)

	//用户文件移动文件夹（修改文件的parent_id）
	@handler UserFileMove
	post /user/file/move (UserFileMoveRequest) returns (UserFileMoveReply)

	//用户文件夹创建
	@handler ShareBasicCreate
	post /share/basic/create (ShareBasicCreateRequest) returns (ShareBasicCreateReply)
}

type ShareBasicCreateRequest {
	//给别人分享资源，带的参数是要分享的文件的identity和过期时间
	RepositoryIdentity string `json:"repository_identity"`
	ExpireTime         int    `json:"expire_time"`
}

type ShareBasicCreateReply {
	Identity string `json:"identity"` //返回这条分享记录在表中的identity
	Message  string `json:"message"`
}

type UserFileMoveRequest {
	Identity string `json:"identity"` //要移动的文件的identity
	ParentId int64  `json:"parent_id"` //新的父级id
}

type UserFileMoveReply {
	Message string `json:"message"`
}

type UserFileDeleteRequest {
	Identity string `json:"identity"`
}

type UserFileDeleteReply {
	Message string `json:"message"`
}

type UserFolderCreateRequest {
	ParentId int64  `json:"parent_id"` //文件夹所属层级
	Name     string `json:"name"` //文件夹名称
}

type UserFolderCreateReply {
	Identity string `json:"identity"`
	Message  string `json:"message"`
}

type UserFileNameUpdateRequest {
	Identity string `json:"identity"`
	Name     string `json:"name"`
}

type UserFileNameUpdateReply {
	Message string `json:"message"`
}

type UserFileListRequest {
	Id   int64 `json:"id,optional"` //文件夹id
	Page int   `json:"page,optional"`
	Size int   `json:"size,optional"`
}

type UserFileListReply {
	Count int         `json:"count",optional`
	List  []*UserFile `json:"list",optional`
}

type UserFile {
	Id                 int64  `json:"id"`
	Identity           string `json:"identity"`
	Name               string `json:"name"`
	RepositoryIdentity string `json:"repositoryIdentity"`
	Ext                string `json:"ext"`
	Path               string `json:"path"`
	Size               int    `json:"size"`
}

type UserRepositorySaveRequest {
	ParentId           int64  `json:"parentId"`
	RepositoryIdentity string `json:"repositoryIdentity"`
	Ext                string `json:"ext"`
	Name               string `json:"name"`
}

type UserRepositorySaveReply {}

type FileUploadRequest {
	Hash string `json:"hash,optional"`
	Name string `json:"name,optional"`
	Ext  string `json:"ext,optional"` //文件后缀名
	Size int64  `json:"size,optional"`
	Path string `json:"path,optional"` //文件在cos服务器上的路径
}

type FileUploadReply {
	Ext      string `json:"ext"`
	Name     string `json:"name"`
	Message  string `json:"message"`
	Identity string `json:"identity"`
}

type Request {
	Name string `path:"name,options=you|me"`
}

type Response {
	Message string `json:"message"`
}

type LoginRequest {
	Name     string `json:"name"`
	Password string `json:"password"`
}

type LoginReply {
	Token string `json:"token"`
}

type UserDeatilRequest {
	identity string `json:"identity"`
}

type UserDeatilReply {
	Name  string `json:"name"`
	Email string `json:"email"`
}

type SendCodeRequest {
	Email string `json:"email"`
}

type SendCodeReply {
	Message string `json:"message"`
}

type UserRegisterRequest {
	Name     string `json:"name"`
	Password string `json:"password"`
	Email    string `json:"email"`
	Code     string `json:"code"`
}

type UserRegisterReply {
	Message string `json:"message"`
}

